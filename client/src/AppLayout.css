/* client/src/AppLayout.css */

.appLayout {
    display: flex;
    /* Ensure it takes up space between header and footer */
    min-height: calc(100vh - 120px); /* Adjust 120px if header/footer height changes */
  }
  
  .mainContent {
    flex-grow: 1; /* Allows the main content to take up the remaining space */
    overflow-y: auto; /* Allow content scrolling if needed */
    /* Add padding if needed, e.g., to match container padding */
    /* padding: var(--space-md); */
    /* This might need adjustment based on specific page content */
    /* On mobile, when sidebar is fixed/overlay, this element naturally flows underneath */
  }
  
  /* Media query to handle layout adjustments when sidebar is hidden on desktop */
  /* This matches the breakpoint where the sidebar *starts* being fixed/hidden */
  @media (max-width: 992px) {
    .appLayout {
      /* On smaller screens, the sidebar is fixed/overlayed, */
      /* so the flex container logic isn't strictly needed */
      /* We can revert to block or keep flex, but mainContent takes full width */
      display: block; /* Or keep flex, doesn't matter much here */
    }
  
    .mainContent {
      /* Ensure main content takes full width when sidebar is overlaid */
      width: 100%;
    }
  }
  /* client/src/AppLayout.css */

.appLayout {
  display: flex;
  min-height: calc(100vh - 120px); /* Adjust 120px if header/footer height changes */
  position: relative; /* Needed for overlay positioning context if overlay wasn't fixed */
}

.mainContent {
  flex-grow: 1;
  overflow-y: auto;
  /* On mobile, when sidebar is fixed/overlay, this element naturally flows underneath */
}

/* --- START: Added Sidebar Overlay Styles --- */
.sidebarOverlay {
  display: none; /* Hidden by default */
  position: fixed; /* Fixed position to cover viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
  z-index: 1039; /* Below sidebar (1040 from Sidebar.module.css), above main content */
  cursor: pointer; /* Indicate it's clickable */
  /* Optional: Add transition for fade-in effect */
  /* opacity: 0;
  transition: opacity 0.3s ease-in-out; */
}
/* --- END: Added Sidebar Overlay Styles --- */


/* Media query to handle layout adjustments when sidebar is hidden/overlaid */
@media (max-width: 992px) {
  .appLayout {
      /* Revert to block as sidebar is fixed/removed from flow */
      display: block;
  }

  .mainContent {
      width: 100%; /* Ensure main content takes full width */
  }

  /* --- START: Show overlay only on mobile when needed --- */
  /* The overlay is conditionally rendered via JS (isSidebarOpen && user),
     so we just need to ensure its base styles are defined correctly above.
     If we wanted a fade effect, we'd toggle opacity here. */
  .sidebarOverlay {
     display: block; /* Make sure it's displayed when rendered */
     /* If using opacity transition: */
     /* opacity: 1; */
  }
  /* --- END: Show overlay only on mobile --- */
}
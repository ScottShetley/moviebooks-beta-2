/* client/src/components/Connection/ConnectionCard/ConnectionCard.module.css */
.card {
    background-color: var(--color-card);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    padding: var(--space-md);
    margin-bottom: var(--space-lg);
    overflow: hidden;
    transition: box-shadow var(--transition-base);
}
.card:hover {
    box-shadow: var(--shadow-md);
}

.header {
    margin-bottom: var(--space-sm);
}
.header h3 {
    margin: 0;
    font-size: var(--font-size-lg);
    font-family: var(--font-heading);
    line-height: 1.3;
}
.header h3 a {
    color: var(--color-secondary);
    text-decoration: none;
    transition: color var(--transition-fast);
}
.header h3 a:hover {
    color: var(--color-primary);
    text-decoration: underline;
}

.meta {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
    margin-bottom: var(--space-md);
}
.meta a {
    color: inherit;
    font-weight: 600;
    text-decoration: none;
     transition: color var(--transition-fast);
}
.meta a:hover {
    color: var(--color-primary);
     text-decoration: underline;
}

.screenshot {
    display: block;
    max-width: 100%;
    height: auto; /* Keep height auto */
    aspect-ratio: 16 / 9; /* Optional: Define aspect ratio for consistency */
    object-fit: cover; /* Use cover if aspect-ratio is set */
    border-radius: var(--border-radius-sm);
    margin-top: var(--space-sm);
    margin-bottom: var(--space-md);
    border: 1px solid var(--color-border);
    background-color: var(--color-background);
}
.noScreenshotPlaceholder {
    /* Could add a min-height/background if desired */
}

.context {
    margin-top: var(--space-sm);
    margin-bottom: var(--space-md);
    line-height: 1.6;
    white-space: pre-wrap;
    font-size: var(--font-size-base); /* Assuming --font-size-base exists, otherwise use md */
    color: var(--color-text);
}

/* --- Styles for Additional Images --- */
.additionalImagesContainer {
    display: flex;
    /* justify-content: flex-start; */ /* Default is flex-start */
    gap: var(--space-sm);
    margin-top: var(--space-sm);
    margin-bottom: var(--space-md);
    flex-wrap: wrap;
}

.additionalImage {
    display: block;
    /* --- MODIFIED --- */
    height: auto; /* Let height adjust based on width */
    width: calc(50% - (var(--space-sm) / 2)); /* Aim for 2 columns with gap accounted for */
    max-width: 200px; /* Add a max-width to prevent them getting huge on wide screens */
    aspect-ratio: 2 / 3; /* Common poster/cover ratio, adjust if needed */
    object-fit: cover;
    /* --- END MODIFICATION --- */
    border-radius: var(--border-radius-sm);
    border: 1px solid var(--color-border);
    background-color: var(--color-background);
}

/* --- Media Query for when images likely wrap --- */
/* Adjust breakpoint as needed based on testing */
@media (max-width: 480px) {
    .additionalImage {
         /* Take up slightly less than half width on very small screens when wrapped */
         /* Could also use 100% if preferred */
         width: calc(50% - (var(--space-sm) / 2)); /* Keep 2-column look even when wrapped? */
         /* Or uncomment below for full width when wrapped */
         /* width: 100%; */
         /* max-width: 150px; */ /* Adjust max-width for smaller screens if needed */
    }
}


.actions {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    border-top: 1px solid var(--color-border);
    padding-top: var(--space-md);
    flex-wrap: wrap;
}

.actionButton {
    padding: var(--space-xs) var(--space-sm);
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
    background-color: transparent;
    border: 1px solid transparent;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    transition: background-color var(--transition-fast), color var(--transition-fast);
}

.actionButton:hover:not(:disabled) {
   background-color: rgba(var(--color-primary-rgb, 139, 30, 63), 0.08);
   color: var(--color-primary);
}
.actionButton:disabled {
   cursor: not-allowed;
   opacity: 0.5;
}

.liked,
.favorited {
    color: var(--color-primary) !important;
    font-weight: 600;
}

.count {
    font-weight: normal;
    margin-left: var(--space-xxs);
    font-size: var(--font-size-xs);
}
.liked .count,
.favorited .count {
    font-weight: 600;
}

.deleteButton {
    margin-left: auto; /* Keep pushing to right by default */
    color: var(--color-text-light);
}
.deleteButton:hover:not(:disabled) {
    color: var(--color-error);
    background-color: rgba(var(--color-error-rgb, 211, 47, 47), 0.08);
}

.actionError {
    color: var(--color-error);
    font-size: var(--font-size-xs);
    margin-left: var(--space-sm);
    flex-basis: 100%;
    text-align: right;
}

/* --- Optional: Adjust delete button position when wrapped --- */
@media (max-width: 480px) { /* Example breakpoint, adjust as needed */
    .actions {
        /* You might want less gap on small screens */
        /* gap: var(--space-sm); */
    }
    .deleteButton {
        /* Remove margin-left:auto to align left when wrapped */
        /* margin-left: 0; */

        /* Or make it full width on its own line? */
         /* margin-left: 0; */
         /* flex-basis: 100%; */
         /* margin-top: var(--space-sm); */
         /* text-align: right; */
    }
}
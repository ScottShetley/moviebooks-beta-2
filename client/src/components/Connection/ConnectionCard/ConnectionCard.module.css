/* client/src/components/Connection/ConnectionCard/ConnectionCard.module.css */

.card {
    background-color: var(--color-card);
    border-radius: var(--border-radius-md);
    padding: var(--space-md);
    margin-bottom: var(--space-lg);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    /* Keep hidden for collapse effect base state */
    border: var(--border-width) solid var(--color-border);
    max-width: 600px;
    position: relative;
    /* For absolute positioned children like popups */
    width: 100%;
    /* Take full width up to max-width */
}

/* Allow overflow when expanded for popups */
.card.expanded {
    overflow: visible;
}


.header {
    margin-bottom: var(--space-xs);
}

.header h3 {
    margin: 0 0 var(--space-xs) 0;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold, 700);
    color: var(--color-text);
    line-height: 1.3;
}

.titleLink {
    color: var(--color-primary);
    text-decoration: none;
}

.titleLink:hover {
    text-decoration: underline;
    color: var(--color-primary-dark);
}

.meta {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
    margin-bottom: var(--space-sm);
}

.userLink {
    color: var(--color-primary);
    font-weight: var(--font-weight-medium, 600);
    text-decoration: none;
}

.userLink:hover {
    text-decoration: underline;
}

/* Styles for Content Wrapper (Collapsible Area) */
.contentWrapper {
    max-height: 250px;
    /* Initial collapsed height */
    overflow: hidden;
    position: relative;
    /* For the fade-out overlay */
    transition: max-height 0.4s ease-in-out;
    margin-bottom: var(--space-sm);
    /* Space before actions */
}

/* Fade-out effect at the bottom when collapsed */
.card:not(.expanded) .contentWrapper::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50px;
    background: linear-gradient(to bottom, transparent, var(--color-card));
    pointer-events: none;
    z-index: 1;
}

/* Expanded state for content wrapper */
.card.expanded .contentWrapper {
    max-height: 2000px;
    /* Large enough for any content */
}

.card.expanded .contentWrapper::before {
    opacity: 0;
    /* Hide fade effect when expanded */
}


.imageLink {
    display: block;
    margin-bottom: var(--space-md);
    text-decoration: none;
}

.screenshotWrapper {
    position: relative;
    width: 100%;
    padding-top: 56.25%;
    /* 16:9 Aspect Ratio */
    background-color: var(--color-background);
    border-radius: var(--border-radius-md);
    overflow: hidden;
}

.screenshot {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border: none;
}

/* Style for placeholder when no screenshot exists (used via JSX conditional, not needed here) */
/* .noScreenshotPlaceholder { ... } */


.context {
    font-size: var(--font-size-md);
    color: var(--color-text);
    line-height: var(--line-height-body);
    margin-top: var(--space-md);
    /* Add margin only if screenshot/context above */
    margin-bottom: 0;
    /* Margin handled by wrapper/container */
    white-space: pre-wrap;
    overflow-wrap: break-word;
}

/* Line Clamp for Context when Collapsed */
.card:not(.expanded) .contentWrapper .context {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    /* Show N lines */
    line-clamp: 3;
    /* Standard property */
    -webkit-box-orient: vertical;
}


.additionalImagesContainer {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-sm);
    margin-top: var(--space-md);
    /* Add margin if context/screenshot above */
}

.additionalImageWrapper {
    display: block;
    text-decoration: none;
}

.additionalImage {
    display: block;
    width: 80px;
    height: 120px;
    object-fit: cover;
    border-radius: var(--border-radius-sm);
    border: var(--border-width) solid var(--color-border);
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.additionalImage:hover {
    transform: scale(1.05);
    box-shadow: var(--shadow-md);
}


.actions {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    /* Allow buttons to wrap */
    gap: var(--space-sm);
    /* Consistent gap */
    border-top: var(--border-width) solid var(--color-border);
    padding-top: var(--space-md);
    position: relative;
    /* For absolute positioned children like popups */
    z-index: 2;
    /* Ensure actions are above content fade */
}

.actionButton {
    background-color: transparent;
    border: var(--border-width) solid var(--color-border);
    color: var(--color-text-light);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--border-radius-md);
    cursor: pointer;
    transition: var(--transition-fast);
    font-size: var(--font-size-sm);
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    line-height: 1;
    /* Prevent extra height */
}

.actionButton:hover:not(:disabled) {
    background-color: var(--color-background);
    border-color: var(--color-text-light);
    color: var(--color-text);
}

.actionButton:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

.count {
    /* Style for like count (used by LikeButton) */
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium, 600);
    margin-left: 2px;
}

/* --- NEW STYLES FOR VIEW DISCUSSION LINK --- */
.viewDiscussionLink {
    /* Inherit button-like appearance */
    background-color: transparent;
    border: var(--border-width) solid var(--color-border);
    /* Similar border to buttons */
    border-radius: var(--border-radius-md);
    padding: var(--space-xs) var(--space-sm);
    /* Similar padding to buttons */
    cursor: pointer;
    /* Indicate clickable */
    transition: var(--transition-fast);
    font-size: var(--font-size-sm);
    /* Similar font size to buttons */
    display: inline-flex;
    /* Align icon and text */
    align-items: center;
    gap: var(--space-xs);
    /* Space between icon and text/count */
    line-height: 1;
    /* Prevent extra height */

    /* Specific link styles */
    color: var(--color-primary);
    /* Use primary color for distinctness */
    border-color: var(--color-primary);
    /* Match border color */
    text-decoration: none;
    /* Remove underline */
}

.viewDiscussionLink:hover {
    background-color: rgba(var(--color-primary-rgb, 0, 123, 255), 0.1);
    /* Light background on hover */
    border-color: var(--color-primary-dark);
    /* Darken border */
    color: var(--color-primary-dark);
    /* Darken text/icon */
}

.viewDiscussionLink:active {
    background-color: rgba(var(--color-primary-rgb, 0, 123, 255), 0.2);
    /* Slightly darker active state */
    border-color: var(--color-primary-darker);
    color: var(--color-primary-darker);
}

/* Style for the icon within the link */
.viewDiscussionLink svg {
    color: var(--color-primary);
    /* Ensure icon uses primary color */
}

.viewDiscussionLink:hover svg {
    color: var(--color-primary-dark);
    /* Darken icon on hover */
}

/* Style for the count within the link */
.viewDiscussionLink .count {
    color: var(--color-primary);
    /* Ensure count uses primary color */
    font-weight: var(--font-weight-medium, 600);
}

.viewDiscussionLink:hover .count {
    color: var(--color-primary-dark);
    /* Darken count on hover */
}

/* --- END NEW STYLES --- */


/* Specific Button States/Types */
.favorited {
    color: var(--color-primary);
    border-color: var(--color-primary);
}

.favorited:hover:not(:disabled) {
    background-color: rgba(var(--color-primary-rgb, 0, 123, 255), 0.1);
    border-color: var(--color-primary);
}

.shareButton {
    color: var(--color-info);
    border-color: var(--color-info);
}

.shareButton:hover:not(:disabled) {
    background-color: rgba(var(--color-info-rgb, 23, 162, 184), 0.1);
    border-color: var(--color-info);
    color: var(--color-info);
    /* Keep icon color consistent on hover */
}

/* --- REMOVED Empty .expandButton rule --- */
/* .expandButton { } */

.expandText {
    margin-left: var(--space-xxs);
    font-size: var(--font-size-xs);
}

.deleteButton {
    color: var(--color-error);
    border-color: var(--color-error);
}

.deleteButton:hover:not(:disabled) {
    background-color: rgba(var(--color-error-rgb, 220, 53, 69), 0.1);
    border-color: var(--color-error);
    color: var(--color-error);
    /* Keep icon color consistent on hover */
}

.actionError {
    color: var(--color-error);
    font-size: var(--font-size-xs);
    margin-left: var(--space-sm);
    /* Optional: align with right buttons if needed */
    /* width: 100%; text-align: right; */
}


/* Share Options Styles (Consistent with TextConnectionCard) */
.shareActionWrapper {
    position: relative;
    display: inline-block;
}

.shareOptionsPopup {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: var(--color-background);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-lg);
    padding: var(--space-xs);
    z-index: 10;
    display: flex;
    flex-direction: column;
    gap: var(--space-xxs);
    margin-bottom: var(--space-sm);
    min-width: 150px;
    animation: fadeIn 0.15s ease-out;
    border: 1px solid var(--color-border);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateX(-50%) translateY(5px);
    }

    to {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

.shareOptionButton {
    background: none;
    border: none;
    color: var(--color-text);
    cursor: pointer;
    padding: var(--space-sm) var(--space-sm);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    text-align: left;
    width: 100%;
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
    transition: background-color var(--transition-fast), color var(--transition-fast);
}

.shareOptionButton:hover {
    background-color: var(--color-background-hover);
    color: var(--color-primary);
}

.shareIcon {
    font-size: 1.1em;
    color: var(--color-icon);
    flex-shrink: 0;
}

.shareOptionButton:hover .shareIcon {
    color: var(--color-primary);
}

.closeShareButton {
    position: absolute;
    top: 2px;
    right: 2px;
    padding: var(--space-xs);
    background: none;
    border: none;
    color: var(--color-icon);
    cursor: pointer;
    line-height: 0;
    width: auto;
}

.closeShareButton:hover {
    color: var(--color-error);
    background-color: transparent;
}

/* END Share Options Styles */


/* Wrapper for right-aligned action buttons */
.endButtonsWrapper {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    /* Default gap between More/Delete */
    margin-left: auto;
    /* Push this group to the right */
}


/* Comments Section Styles */
.commentsSectionWrapper {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.4s ease-in-out, margin-top 0.4s ease-in-out, padding-top 0.4s ease-in-out;
    margin-left: calc(-1 * var(--space-md));
    /* Counteract parent padding */
    margin-right: calc(-1 * var(--space-md));
    padding-left: var(--space-md);
    padding-right: var(--space-md);
    border-top: none;
    /* Border applied dynamically below */
}

.commentsSectionWrapper.commentsVisible {
    max-height: 1000px;
    /* Allow space for comments */
    margin-top: var(--space-md);
    padding-top: var(--space-md);
    border-top: var(--border-width) solid var(--color-border);
    /* Show border only when visible */
}

.commentLoading {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-lg) 0;
    color: var(--color-text-light);
    gap: var(--space-sm);
    font-size: var(--font-size-sm);
}

.commentError {
    padding: var(--space-md);
    color: var(--color-error);
    background-color: rgba(var(--color-error-rgb, 220, 53, 69), 0.1);
    border: var(--border-width) solid var(--color-error);
    border-radius: var(--border-radius-md);
    text-align: center;
    font-size: var(--font-size-sm);
    margin-top: var(--space-sm);
}

.noCommentsYet {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
    font-style: italic;
    text-align: center;
    padding: var(--space-md) 0;
    margin-top: var(--space-sm);
}


/* Media Queries for Mobile Responsiveness */
@media (max-width: var(--breakpoint-md, 768px)) {
    .card {
        padding: var(--space-sm);
        border-radius: var(--border-radius-md);
        /* Optional: Adjust radius */
    }

    .header h3 {
        font-size: var(--font-size-md);
    }

    .meta {
        font-size: var(--font-size-xs);
    }

    .context {
        font-size: var(--font-size-sm);
    }

    .additionalImage {
        width: 60px;
        height: 90px;
    }

    .actions {
        gap: var(--space-xs);
        /* Reduce gap between buttons */
        padding-top: var(--space-sm);
    }

    .actionButton {
        padding: var(--space-xxs) var(--space-xs);
        font-size: var(--font-size-sm);
        /* Optional: Adjust button font size */
    }

    .count {
        font-size: var(--font-size-xs);
    }

    .contentWrapper {
        max-height: 200px;
        /* Adjust collapsed height for mobile */
    }

    .card.expanded .contentWrapper {
        max-height: 1500px;
        /* Adjust max expanded height for mobile */
    }

    .card:not(.expanded) .contentWrapper .context {
        -webkit-line-clamp: 2;
        /* Show fewer lines on mobile */
        line-clamp: 2;
        /* Standard property */
    }

    .commentsSectionWrapper {
        margin-left: calc(-1 * var(--space-sm));
        /* Adjust negative margin */
        margin-right: calc(-1 * var(--space-sm));
        padding-left: var(--space-sm);
        padding-right: var(--space-sm);
    }

    .commentsSectionWrapper.commentsVisible {
        margin-top: var(--space-sm);
        padding-top: var(--space-sm);
    }

    .commentLoading,
    .commentError,
    .noCommentsYet {
        font-size: var(--font-size-xs);
        padding: var(--space-md) 0;
    }

    .expandText {
        display: none;
        /* Hide "More/Less" text */
    }

    /* Adjust End Buttons Wrapper gap for mobile */
    .endButtonsWrapper {
        gap: var(--space-xs);
        /* Use smaller gap for mobile */
    }

    /* Adjust share popup size/padding for mobile */
    .shareOptionsPopup {
        min-width: 130px;
    }

    .shareOptionButton {
        padding: var(--space-xs) var(--space-sm);
        gap: var(--space-xs);
    }
}